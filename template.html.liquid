<!-- import Highcharts + Chartkick libraries -->
<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartkick@5.0.1/dist/chartkick.min.js"></script>

<!-- Add Tabler Icons stylesheet -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@tabler/icons-webfont@3.30.0/dist/tabler-icons.min.css" />

<!-- Markup with empty, ID'd element for chart injection -->
<div class="view view--full">
  <div class="layout layout--col gap--space-between">

    <!-- Info Row (Left: Last updated time, Right: Glucose & Trend) -->
    <div class="grid grid--cols-3">
      <div class="item">
        <div class="meta"></div>
        <div class="content">
          <span class="label" style="color: #333; font-size: 0.9rem;">
             <i class="ti ti-clock"></i> {{ time }}
          </span>
          <span class="label">Last updated</span>
        </div>
      </div>
      <div class="item" style="text-align: center;">
        <div class="content">
          <span class="value value--tnums" style="font-size: 2rem; color: #ff0000;">
            <i class="ti ti-droplet"></i> {{ glucose }} mg/dL
          </span><br>
        </div>
      </div>
      <div class="item" style="text-align: center;">
        <div class="content">
          <span class="value value--tnums" style="font-size: 2rem; color: #444;">{{ trend | safe }}</span>
        </div>
      </div>
    </div>


    <!-- Chart Area -->
    <div id="glucose-chart" style="width: 100%; height: 300px;"></div>
  </div>

  <div class="title_bar">
    <img class="image" src="https://usetrmnl.com/images/plugins/simple-analytics--render.svg" />
    <span class="title">Continuous Glucose Monitoring (CGM)</span>
  </div>
</div>

<script type="text/javascript">
  var data = {{ chart_data | json | safe }};

  // Extract the earliest and latest timestamps from the data
  var minTimestamp = data.length > 0 ? new Date(data[0][0]).getTime() : new Date().getTime() - 24 * 60 * 60 * 1000; // Default to 24 hours ago
  var maxTimestamp = data.length > 0 ? new Date(data[data.length - 1][0]).getTime() : new Date().getTime(); // Default to current time

  // Recommended configs to achieve the TRMNL Framework aesthetic
  var createChart = function() {
    new Chartkick["LineChart"](
      "glucose-chart",
      data,
      {
        adapter: "highcharts",
        prefix: "",
        thousands: ",",
        points: true,
        colors: ["black"],
        curve: true,
        library: {
          chart: {
            height: 400,
          },
          plotOptions: {
            series: {
              animation: false,
              lineWidth: 4
            }
          },
          yAxis: {
            min: 0, // Set minimum value for y-axis
            max: 400, // Set maximum value for y-axis
            plotBands: [{
              from: 80,
              to: 180,
              color: "#9999", // Light gray background for time-in-range zone
              label: {
                text: 'Time In Range (80 - 180)',
                style: {
                  color: '#88',
                  fontSize: '12px'
                }
              }
            }],
            labels: {
              style: {
                fontSize: "18px",
                color:"#ff0000"
              }
            },
            gridLineDashStyle: "shortdot",
            gridLineWidth: 1,
            gridLineColor: "#444444",
            tickAmount: 5
          },
          xAxis: {
            type: "datetime",
            min: minTimestamp, // Use the earliest reading's timestamp
            max: maxTimestamp, // Use the latest reading's timestamp
            labels: {
              style: {
                fontSize: "16px",
                color: "#000000"
              }
            },
            lineWidth: 0,
            gridLineDashStyle: "dot",
            tickWidth: 1,
            tickLength: 0,
            gridLineWidth: 1,
            gridLineColor: "#444444",
            tickPixelInterval: 120
          }
        }
      }
    );
  };

  // Ensure your chart loads before plugin render is generated
  if ("Chartkick" in window) {
    createChart();
  } else {
    window.addEventListener("chartkick:load", createChart, true);
  }

  // Function to update the chart with new data
  function updateChart(newDataPoint) {
    // Append the new data point to the existing data
    data.push(newDataPoint);

    // Re-render the chart with the updated data
    new Chartkick["LineChart"](
      "glucose-chart",
      data,
      {
        adapter: "highcharts",
        library: {
          xAxis: {
            type: "datetime",
            labels: {
              style: {
                fontSize: "16px",
                color: "#000000"
              }
            }
          },
          yAxis: {
            min: 0,
            max: 400,
            labels: {
              style: {
                fontSize: "18px",
                color: "#ff0000"
              }
            }
          }
        }
      }
    );
  }

  // Simulate receiving new data from the backend
  function fetchNewData() {
    // Example of a new data point (replace this with an actual API call)
    var newDataPoint = ["2025-05-06T06:36", 84];

    // Update the chart with the new data point
    updateChart(newDataPoint);
  }

  // Fetch new data every 5 minutes (300,000 milliseconds)
  setInterval(fetchNewData, 300000);
</script>
